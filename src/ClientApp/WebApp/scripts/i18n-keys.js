const fs = require('fs');
const path = require('path');

const sourceLang = 'zh';
const sourceFile = path.resolve(__dirname, `../src/assets/i18n/${sourceLang}.json`);
const targetFile = path.resolve(__dirname, '../src/app/share/i18n-keys.ts');

console.log('Generating i18n keys...');

try {
  const langJson = fs.readFileSync(sourceFile, 'utf8');
  const lang = JSON.parse(langJson);

  const keys = {};
  const result = generateKeys(lang, '');

  const content = `// This file is generated by scripts/i18n-keys.js
// Do not edit this file directly.
/* eslint-disable */
export const I18N_KEYS = ${JSON.stringify(result, null, 2)};
`;

  fs.writeFileSync(targetFile, content);
  console.log(`Successfully generated i18n keys to ${targetFile}`);

} catch (error) {
  console.error('Error generating i18n keys:', error);
  process.exit(1);
}

function generateKeys(obj, prefix) {
  const result = {};
  for (const key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      const newPrefix = prefix ? `${prefix}.${key}` : key;
      if (typeof obj[key] === 'object' && obj[key] !== null) {
        result[key] = generateKeys(obj[key], newPrefix);
      } else {
        result[key] = newPrefix;
      }
    }
  }
  return result;
}
